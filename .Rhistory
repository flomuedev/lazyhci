ylab(DV.pretty)
if(length(IVs) == 3) {
p <- p + facet_wrap(as.formula(paste("~", IVs[3])))
}
if(length(IVs) == 4) {
p <- p + facet_grid(as.formula(paste(IVs[3], "~", IVs[4], sep=" ")))
}
if(!is.null(theme.fontfamily))
p <- p + theme_minimal(base_family = theme.fontfamily, base_size = p.basesize)
else
p <- p + theme_minimal(base_size = p.basesize)
p <- p + theme(plot.title = element_text(hjust = 0.5)) + theme(legend.position="bottom")
if(!is.null(p.title)) {
p <- p + ggtitle(p.title)
}
return(p)
}
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p1
#' @param IVs a vector of the names of the grouping variables
#' @param fun.sum (optional) the summary function to use. Defaults to mean.
#' @param fun.error (optional) the error function to use. Defaults to sd.
#' @param p.scale_fill_manual (optional) a color scale for the plot
#' @param p.basesize (optional) font size of the plot
#' @param p.title (optinal) a title
#' @param theme.fontfamily (optional) a font for your plot. Must be registered using extrafont.
#' @param theme.fontfamily.device (optional) the device for extrafont. Defaults to win.
#' @param na.rm (default = false) if NAs should be removed before plotting
#' @export
data_summary_plot <- function(data, DV, IVs, fun.sum = mean, fun.error = sd, p.scale_fill_manual = NULL, p.basesize = 10, p.title = NULL, theme.fontfamily = NULL, theme.fontfamily.device = "win", na.rm = FALSE){
require(ggplot2)
ensure_font_support.internal(theme.fontfamily, theme.fontfamily.device)
if(any(length(IVs) < 1 | length(IVs) > 4) )
stop('Sorry, only 1-4 grouping variables supported')
IVs.pretty <- IVs
DV.pretty <- DV
data <- fix_col_names(data)
IVs <- fix_strings(IVs)
DV <- fix_strings(DV)
data.plot <- data_summary.internal(data, DV, IVs, fun.sum, fun.error, na.rm = na.rm)
p<- NULL
if(length(IVs) == 1)
p<- ggplot(data.plot, aes_string(x=IVs[1], y="mean", fill=IVs[1])) + xlab(IVs.pretty[1])
else
p<- ggplot(data.plot, aes_string(x=IVs[1], y="mean", fill=IVs[2])) + xlab(IVs.pretty[1]) + labs(fill = IVs.pretty[2])
if(!is.null(p.scale_fill_manual))
p <- p + scale_fill_manual(values = p.scale_fill_manual)
p <- p + geom_bar(stat="identity",
position=position_dodge2(preserve = "single")) +
geom_errorbar(aes(ymin=mean-error, ymax=mean+error), width = 0.2,
position = position_dodge2(width = 0.2, padding = 0.8, preserve = "single"))  +
ylab(DV.pretty)
if(length(IVs) == 3) {
p <- p + facet_wrap(as.formula(paste("~", IVs[3])))
}
if(length(IVs) == 4) {
p <- p + facet_grid(as.formula(paste(IVs[3], "~", IVs[4], sep=" ")))
}
if(!is.null(theme.fontfamily))
p <- p + theme_minimal(base_family = theme.fontfamily, base_size = p.basesize)
else
p <- p + theme_minimal(base_size = p.basesize)
p <- p + theme(plot.title = element_text(hjust = 0.5)) + theme(legend.position="bottom")
if(!is.null(p.title)) {
p <- p + ggtitle(p.title)
}
return(p)
}
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p1
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
Visualization = visualization
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p1
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
Visualization = factor(cisualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
Visualization = factor(visualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p1
plots.font.family <- "Linux Biolinum"
colorscale.likert <- c("#c90202", "#ce4c00", "#c97700", "#bb9c00", "#a3bf00", "#7ce000","#0aff64")
colorscale.scale <- c("#648FFF", "#FE6100", "#785EF0", "#FFB000", "#DC267F")
basesize = 20
basesize.likert = 24
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
Visualization = factor(visualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p1
p1 <- data.raw %>%
mutate(
'PEI - Psychosocial' = ge_psychosocial,
Visualization = factor(visualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "PEI - Psychosocial", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p2 <- data.raw %>%
mutate(
'PEI - Functional' = ge_functional,
Visualization = factor(visualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "PEI - Functional", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p3 <- data.raw %>%
mutate(
'Inclusion of Other in the Self (IOS) Scale' = social_relationship,
Visualization = factor(visualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "Inclusion of Other in the Self (IOS) Scale", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
p4 <- data.raw %>%
filter(!participant %in% c(16, 23, 4, 13, 20, 29, 1)) %>%
mutate(
'PEI - Social Presence' = geq_social,
Visualization = factor(visualization, levels = c("single ECG", "single hearts", "multi ECG", "multi hearts", "No vis")),
) %>%
data_summary_plot(DV = "PEI - Social Presence", IVs = c("Visualization"), fun.error = se, p.basesize = basesize, theme.fontfamily = plots.font.family, p.scale_fill_manual = colorscale.scale) + theme(axis.title.x=element_blank(), axis.text.x = element_blank())
plot.combined <- grid_arrange_shared_legend(p1,p2,p4,p3)
ggsave(filename = file.path(getwd(), "plot.combined.pdf"), plot = plot.combined, width = 18, height = 6, device = cairo_pdf)
devtools::document
devtools::document()
devtools::install()
library(lazyhci)
library(tidyverse)
require(ARTool)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/13m4gCCju5Iupt6MN2T_jZ8VArEjH0s_iZqNRm30vM3k/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
## analysis
data.analysis <- janitor::clean_names(res$main)
data.plot.likert <- data.analysis %>%
mutate(
technique = case_when(position_undo == "Yes" && orientation_undo == "Yes"  ~ "Position & Orientation Undo",
position_undo == "Yes" && orientation_undo == "No"  ~ "Position Undo",
position_undo == "No" && orientation_undo == "Yes"  ~ "Orientation Undo",
position_undo == "No" && orientation_undo == "No"  ~ "No Undo"
)
)
library(lazyhci)
library(tidyverse)
require(ARTool)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/13m4gCCju5Iupt6MN2T_jZ8VArEjH0s_iZqNRm30vM3k/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
res$pre <- res$pre %>% filter(participant_id > 0)
res$main <- res$main %>% filter(participant_id > 0)
res$pos <- res$post %>% filter(participant_id > 0)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
tlx_raw <- tlx_raw %>%
rename(tlxID = id)
res$main <- merge(res$main, tlx_raw, by = c("tlxID"), all.x = TRUE)
res$main <- res$main %>%
rename(
'Position Undo' = position_support_6,
'Orientation Undo' = orientation_support_7,
'Movement Visualization' = visualization_8
)
res$main <- res$main %>% mutate_at(vars(2:5), as.factor)
##remove p10 first occurance
#res$main <- res$main %>% filter(!(participant_id == 10 && tlxID > 1900))
###demographics
res$pre %>%
summarise(
n=n(),
age_mean = mean(age),
age_sd = sd(age),
age_min = min(age),
age_max = max(age),
female = sum(gender=="Female"),
male = sum(gender=="Male"),
)
### ssq
res$main <- res$main %>%
mutate_at(vars(starts_with("please_indicate")), dplyr::recode, `None` = 0, `Slight` = 1, `Moderate` = 2, `Severe` = 3) %>%
mutate(
Nausea = rowSums(across(c(23))),
Oculomotor = rowSums(across(c(23,24,25,26,27,29))),
Disorientation = rowSums(across(c(28,29,30,31))),
SSQ = rowSums(across(c(39,40,41)))
)
res$main$Nausea = res$main$Nausea * 9.54
res$main$Oculomotor = res$main$Oculomotor * 7.58
res$main$Disorientation = res$main$Disorientation * 13.92
res$main$SSQ = res$main$SSQ * 3.74
### tlx
res$main <- res$main %>%
mutate(
RawTLX = rowSums(across(c(32:37))) * 5 / 6
)
### ipq
res$main$sp2u <- -1 * res$main$i_felt_like_i_was_just_perceiving_pictures_12 + 6
res$main$inv3u <- -1 * res$main$i_still_paid_attention_to_the_real_environment_18 + 6
res$main$real1u <- -1 * res$main$how_real_did_the_virtual_world_seem_to_you_20 + 6
res$main <- res$main %>%
rowwise() %>%
mutate(
sp = mean(c(
somehow_i_felt_that_the_virtual_world_surrounded_me_11,
sp2u,
i_did_not_feel_present_in_the_virtual_space_13,
i_had_a_sense_of_acting_in_the_virtual_space_rather_than_operating_something_from_outside_14,
i_felt_present_in_the_virtual_space_15)
),
inv = mean(c(
how_aware_were_you_of_the_real_world_surrounding_while_navigating_in_the_virtual_world_i_e_sounds_room_temperature_other_people_etc_16,
i_was_not_aware_of_my_real_environment_17,
inv3u,
i_was_completely_captivated_by_the_virtual_world_19),
),
real = mean(c(
real1u,
how_much_did_your_experience_in_the_virtual_environment_seem_consistent_with_your_real_world_experience_21,
how_real_did_the_virtual_world_seem_to_you_22,
the_virtual_world_seemed_more_realistic_than_the_real_world_23),
),
pres = in_the_computer_generated_world_i_had_a_sense_of_being_there_10
)
## analysis
data.analysis <- janitor::clean_names(res$main)
#SSQ
data.analysis %>%
group_by(position_undo, orientation_undo, movement_visualization) %>%
summarise(
mean=mean(ssq),
sd=sd(ssq)
)
art.ssq <- aov_art_fit.internal(data=data.analysis, DV="ssq", participant="participant_id",within.vars = c("position_undo", "orientation_undo", "movement_visualization"))
interaction_plot.art.internal <- function(art.model, contrasts) {
require(ARTool)
require(effectsize)
str1 <- paste(contrasts, collapse = ":")
str2 <- paste(contrasts, collapse = "")
str3 <- paste(contrasts, collapse = " ~ ")
art.model.lm <- artlm.con(art.model, str1)
#emm <- emmeans(artlm.con(art.model, str1), str2)
# type ~ size | side
plot <- emmip(art.model.lm, as.formula(paste(str2, " | side",sep="")))
return(plot)
}
aov_art_fit.internal <- function(data, DV, participant, within.vars = c(), between.vars = c(), posthoc.adj="bonferroni", es = c("ges", "pes", "none"), art.type = c("aov", "lme")) {
require(ARTool)
require(effectsize)
data.internal <- as.data.frame(data)
art.type <- rlang::arg_match(art.type)
es <- rlang::arg_match(es)
formula.aov <- paste(
DV,
" ~ ",
"(",
paste(c(within.vars, between.vars), collapse ="*"),
")",
" + ",
"Error(",
participant,
"/",
"(",
paste(within.vars, collapse ="*"),
"))",
sep=""
)
formula.lme <- paste(
DV,
" ~ ",
"(",
paste(c(within.vars, between.vars), collapse ="*"),
")",
" + ",
"(1|",
participant,
")",
sep=""
)
print(formula.aov)
m.aov <- art(as.formula(formula.aov), data=data)
m.lme <- art(as.formula(formula.lme), data=data)
return(list("m.aov" = m.aov, "m.lme" = m.lme))
}
library(lazyhci)
library(tidyverse)
require(ARTool)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/13m4gCCju5Iupt6MN2T_jZ8VArEjH0s_iZqNRm30vM3k/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
res$pre <- res$pre %>% filter(participant_id > 0)
res$main <- res$main %>% filter(participant_id > 0)
res$pos <- res$post %>% filter(participant_id > 0)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
tlx_raw <- tlx_raw %>%
rename(tlxID = id)
res$main <- merge(res$main, tlx_raw, by = c("tlxID"), all.x = TRUE)
res$main <- res$main %>%
rename(
'Position Undo' = position_support_6,
'Orientation Undo' = orientation_support_7,
'Movement Visualization' = visualization_8
)
res$main <- res$main %>% mutate_at(vars(2:5), as.factor)
##remove p10 first occurance
#res$main <- res$main %>% filter(!(participant_id == 10 && tlxID > 1900))
###demographics
res$pre %>%
summarise(
n=n(),
age_mean = mean(age),
age_sd = sd(age),
age_min = min(age),
age_max = max(age),
female = sum(gender=="Female"),
male = sum(gender=="Male"),
)
### ssq
res$main <- res$main %>%
mutate_at(vars(starts_with("please_indicate")), dplyr::recode, `None` = 0, `Slight` = 1, `Moderate` = 2, `Severe` = 3) %>%
mutate(
Nausea = rowSums(across(c(23))),
Oculomotor = rowSums(across(c(23,24,25,26,27,29))),
Disorientation = rowSums(across(c(28,29,30,31))),
SSQ = rowSums(across(c(39,40,41)))
)
res$main$Nausea = res$main$Nausea * 9.54
res$main$Oculomotor = res$main$Oculomotor * 7.58
res$main$Disorientation = res$main$Disorientation * 13.92
res$main$SSQ = res$main$SSQ * 3.74
### tlx
res$main <- res$main %>%
mutate(
RawTLX = rowSums(across(c(32:37))) * 5 / 6
)
### ipq
res$main$sp2u <- -1 * res$main$i_felt_like_i_was_just_perceiving_pictures_12 + 6
res$main$inv3u <- -1 * res$main$i_still_paid_attention_to_the_real_environment_18 + 6
res$main$real1u <- -1 * res$main$how_real_did_the_virtual_world_seem_to_you_20 + 6
res$main <- res$main %>%
rowwise() %>%
mutate(
sp = mean(c(
somehow_i_felt_that_the_virtual_world_surrounded_me_11,
sp2u,
i_did_not_feel_present_in_the_virtual_space_13,
i_had_a_sense_of_acting_in_the_virtual_space_rather_than_operating_something_from_outside_14,
i_felt_present_in_the_virtual_space_15)
),
inv = mean(c(
how_aware_were_you_of_the_real_world_surrounding_while_navigating_in_the_virtual_world_i_e_sounds_room_temperature_other_people_etc_16,
i_was_not_aware_of_my_real_environment_17,
inv3u,
i_was_completely_captivated_by_the_virtual_world_19),
),
real = mean(c(
real1u,
how_much_did_your_experience_in_the_virtual_environment_seem_consistent_with_your_real_world_experience_21,
how_real_did_the_virtual_world_seem_to_you_22,
the_virtual_world_seemed_more_realistic_than_the_real_world_23),
),
pres = in_the_computer_generated_world_i_had_a_sense_of_being_there_10
)
## analysis
data.analysis <- janitor::clean_names(res$main)
#SSQ
data.analysis %>%
group_by(position_undo, orientation_undo, movement_visualization) %>%
summarise(
mean=mean(ssq),
sd=sd(ssq)
)
art.ssq <- aov_art_fit.internal(data=data.analysis, DV="ssq", participant="participant_id",within.vars = c("position_undo", "orientation_undo", "movement_visualization"))
art.ssq.anova <- anova(art.ssq$m.aov)
art.ssq.anova$eta.sq <- with(art.ssq.anova, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
art.ssq.anova
#orientation
art.con(art.ssq$m.aov, "orientation_undo", adjust="bonf") %>%  # run ART-C for X1 × X2
summary() %>%  # add significance stars to the output
mutate(sig. = symnum(p.value, corr=FALSE, na=FALSE,
cutpoints = c(0, .001, .01, .05, .10, 1),
symbols = c("***", "**", "*", ".", " ")))
model.ssq.posthoc.orientation <-  emmeans(artlm(art.ssq$m.aov, "orientation_undo"), ~ orientation_undo)
require(emmeans)
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
library(lazyhci)
library(tidyverse)
require(ARTool)
require(emmeans)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/13m4gCCju5Iupt6MN2T_jZ8VArEjH0s_iZqNRm30vM3k/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
res$pre <- res$pre %>% filter(participant_id > 0)
res$main <- res$main %>% filter(participant_id > 0)
res$pos <- res$post %>% filter(participant_id > 0)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
tlx_raw <- tlx_raw %>%
rename(tlxID = id)
res$main <- merge(res$main, tlx_raw, by = c("tlxID"), all.x = TRUE)
res$main <- res$main %>%
rename(
'Position Undo' = position_support_6,
'Orientation Undo' = orientation_support_7,
'Movement Visualization' = visualization_8
)
res$main <- res$main %>% mutate_at(vars(2:5), as.factor)
##remove p10 first occurance
#res$main <- res$main %>% filter(!(participant_id == 10 && tlxID > 1900))
###demographics
res$pre %>%
summarise(
n=n(),
age_mean = mean(age),
age_sd = sd(age),
age_min = min(age),
age_max = max(age),
female = sum(gender=="Female"),
male = sum(gender=="Male"),
)
### ssq
res$main <- res$main %>%
mutate_at(vars(starts_with("please_indicate")), dplyr::recode, `None` = 0, `Slight` = 1, `Moderate` = 2, `Severe` = 3) %>%
mutate(
Nausea = rowSums(across(c(23))),
Oculomotor = rowSums(across(c(23,24,25,26,27,29))),
Disorientation = rowSums(across(c(28,29,30,31))),
SSQ = rowSums(across(c(39,40,41)))
)
res$main$Nausea = res$main$Nausea * 9.54
res$main$Oculomotor = res$main$Oculomotor * 7.58
res$main$Disorientation = res$main$Disorientation * 13.92
res$main$SSQ = res$main$SSQ * 3.74
### tlx
res$main <- res$main %>%
mutate(
RawTLX = rowSums(across(c(32:37))) * 5 / 6
)
### ipq
res$main$sp2u <- -1 * res$main$i_felt_like_i_was_just_perceiving_pictures_12 + 6
res$main$inv3u <- -1 * res$main$i_still_paid_attention_to_the_real_environment_18 + 6
res$main$real1u <- -1 * res$main$how_real_did_the_virtual_world_seem_to_you_20 + 6
res$main <- res$main %>%
rowwise() %>%
mutate(
sp = mean(c(
somehow_i_felt_that_the_virtual_world_surrounded_me_11,
sp2u,
i_did_not_feel_present_in_the_virtual_space_13,
i_had_a_sense_of_acting_in_the_virtual_space_rather_than_operating_something_from_outside_14,
i_felt_present_in_the_virtual_space_15)
),
inv = mean(c(
how_aware_were_you_of_the_real_world_surrounding_while_navigating_in_the_virtual_world_i_e_sounds_room_temperature_other_people_etc_16,
i_was_not_aware_of_my_real_environment_17,
inv3u,
i_was_completely_captivated_by_the_virtual_world_19),
),
real = mean(c(
real1u,
how_much_did_your_experience_in_the_virtual_environment_seem_consistent_with_your_real_world_experience_21,
how_real_did_the_virtual_world_seem_to_you_22,
the_virtual_world_seemed_more_realistic_than_the_real_world_23),
),
pres = in_the_computer_generated_world_i_had_a_sense_of_being_there_10
)
data.plot.likert <- data.analysis %>%
mutate(
technique = case_when(position_undo == "Yes" && orientation_undo == "Yes"  ~ "Position & Orientation Undo",
position_undo == "Yes" && orientation_undo == "No"  ~ "Position Undo",
position_undo == "No" && orientation_undo == "Yes"  ~ "Orientation Undo",
position_undo == "No" && orientation_undo == "No"  ~ "No Undo"
)
)
data.plot.likert$technique <- factor(data.plot.likert$technique, levels = c("Position & Orientation Undo", "Position Undo", "Orientation Undo", "No Undo"))
art.the_locomotion_technique_was_convenient_to_use_25 <- aov_art_fit.internal(data=data.analysis, DV="the_locomotion_technique_was_convenient_to_use_25", participant="participant_id",within.vars = c("position_undo", "orientation_undo", "movement_visualization"))
art.the_locomotion_technique_was_convenient_to_use_25.anova <- anova(art.the_locomotion_technique_was_convenient_to_use_25$m.aov)
art.the_locomotion_technique_was_convenient_to_use_25.anova$eta.sq <- with(art.ssq.anova, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
art.the_locomotion_technique_was_convenient_to_use_25.anova
