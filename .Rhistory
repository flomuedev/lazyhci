as.data.frame(missing)
data.model
setwd(path.cur)
path.cur
devtools::load_all()
data.model
lazy_check$message
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
cli::cli_warn(missing)
cli::cli_warn(print(missing))
missing
devtools::load_all()
data.model
missing
knitr::kable(missing)
knitr::kable(missing, "pipe")
warning(missing)
warning(paste0(capture.output(missing), collapse = "\n"))
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
library(lazyhci)
library(dplyr)
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load(pattern = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}")
devtools::load_all()
setwd(path.cur)
devtools::load_all()
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load(pattern = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}")
problems(data.raw)
tidyverse::problems(data.raw)
View(data.raw)
View(data.raw)
data.raw <-readr::read_csv2(files, id = "path")
View(data.raw)
list(extract_variables.internal(path, pattern)
)
devtools::load_all()
setwd(path.cur)
devtools::load_all()
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load(pattern = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}", read = readr::read_csv2)
list(extract_variables.internal(path, pattern))
string
template
View(data.raw)
extract_variables.internal("StudyDataCSV/P (0)/summaryPIN_0_0.csv", pattern)
string
template
extract_variables.internal("StudyDataCSV/P (0)/summaryPIN_6_14.csv", pattern)
data.raw <- lazy_load(pattern = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}.csv", read = readr::read_csv2)
extract_variables.internal("StudyDataCSV/P (0)/summaryPIN_6_14.csv", pattern)
extract_variables.internal("StudyDataCSV/P (6)/summaryPIN_6_14.csv", pattern)
setwd(path.cur)
devtools::load_all()
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load(pattern = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}.csv", read = readr::read_csv2)
string
string
template
string
template
setwd(path.cur)
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load(pattern = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}.csv", read = readr::read_csv2)
View(data.raw)
extract_variables.internal(string = "StudyDataCSV/P (0)/summaryPIN_0_6.csv", template = pattern)
pattern
extract_variables.internal(string = "StudyDataCSV/P (0)/summaryPIN_0_6.csv", template = ""StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}.csv"")
extract_variables.internal(string = "StudyDataCSV/P (0)/summaryPIN_0_6.csv", template = ""StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}.csv"")
extract_variables.internal(string = "StudyDataCSV/P (0)/summaryPIN_0_6.csv", template = "StudyDataCSV/P ({pid})/summaryPIN_{pid2}_{condition}.csv")
extract_variables.internal(string = "StudyDataCSV/P (0)/summaryPIN_0_6.csv", template = "StudyDataCSV/P{pid}/summaryPIN_{pid2}_{condition}.csv")
extract_variables.internal(string = "StudyDataCSV/P (0)/summaryPIN_0_6.csv", template = "StudyDataCSV/{*}/summaryPIN_{pid}_{condition}.csv")
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load(pattern = "StudyDataCSV/{*}/summaryPIN_{pid}_{condition}.csv", read = readr::read_csv2)
setwd(path.cur)
View(data.raw)
View(data.raw)
data.raw.pin <- lazy_load(pattern = "StudyDataCSV/{*}/summaryPIN_{pid}_{condition}.csv", read = readr::read_csv2)
data.raw.pin %>% mutate(
Size = case_when(
condition < 5 ~ "small",
condition < 10 == 0 ~ "medium",
data.raw.pin %>% mutate(
Size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
)
)
data.raw.pin <- data.raw.pin %>% mutate(
Size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
)
)
View(data.raw.pin)
View(data.raw)
data.raw.pin$condition <- as.numeric(data.raw.pin$condition)
View(data.raw.pin)
data.raw.pin <- data.raw.pin %>% mutate(
Size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
)
)
View(data.raw.pin)
data.raw.pin <- data.raw.pin %>% mutate(
Size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
Redirection = condition %% 5
)
View(data.raw.pin)
data.raw.pin <- data.raw.pin %>% mutate(
Size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
Redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
)
)
View(data.raw.pin)
data.model <- lazy_model(data.raw.pin, participant = "pid", within.vars = c("Size", "Redirection"))
data.model
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw.pin <- lazy_load(pattern = "StudyDataCSV/{*}/summaryPIN_{pid}_{condition}.csv", read = readr::read_csv2)
setwd(path.cur)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
)
)
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("size", "redirection"))
data.model
View(data.pin)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = Pin == Input
)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input
)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`
)
View(data.pin)
data.pin$`Starting Time`
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("size", "redirection"))
lazy_plot(data.model, dv = "correct")
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("redirection", "size"))
lazy_plot(data.model, dv = "correct")
data.pin.analysis <- lazy_analyze(data.model, dv = "correct", analysis_type = "glme", family = "binomial")
data.pin.analysis
data.pin.analysis$post_hoc$redirection$interaction_plot
data.pin.analysis$post_hoc$`redirection:size`$interaction_plot
#correct
lazy_plot(data.model, dv = "correct")
data.pin.analysis$post_hoc$`redirection:size`$interaction_plot
plot(data.pin.analysis$post_hoc$`redirection:size`$`emmeans of redirection, size`)
#correct
lazy_plot(data.model, dv = "correct")
data.pin.analysis$post_hoc$`redirection:size`$interaction_plot
data.pin.analysis$descriptives$redirection_x_size
#correct
lazy_plot(data.model, dv = "correct")
#correct
lazy_plot(data.model, dv = "correct", fun.error = se)
#correct
lazy_plot(data.model, dv = "correct", ivs = c("size", "redirection"))
#correct
lazy_plot(data.model, dv = "correct", ivs = c("size", "redirection"), fun.error = "se")
lazy_plot(data.model, dv = "correct", fun.error = se)
data.pin.analysis
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("redirection"))
#correct
lazy_plot(data.model, dv = "correct", ivs = c("redirection"), fun.error = se)
data.pin.analysis$post_hoc$`redirection:size`$interaction_plot
data.pin.analysis$post_hoc$`redirection:size`$`emmeans of redirection, size`
data.pin.analysis$post_hoc$`redirection:size`$`pairwise differences of redirection, size`
data.pin.analysis$post_hoc$`redirection:size`$`emmeans of redirection, size`
emm <- data.pin.analysis$post_hoc$`redirection:size`$`emmeans of redirection, size`
summary(emm, type = "response")
emmeans::emmip(emm)
emmeans::emmip(emm, formula = size ~ redirection)
emmeans::emmip(emm, formula = redirection ~ size)
emmeans::emmip(emm, formula = redirection ~ size, type="response")
##tct
lazy_plot(data.model, dv = "TCT", fun.error = se)
library(lazyhci)
library(dplyr)
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw.pin <- lazy_load(pattern = "StudyDataCSV/{*}/summaryPIN_{pid}_{condition}.csv", read = readr::read_csv2)
setwd(path.cur)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`
)
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("redirection", "size"))
##tct
lazy_plot(data.model, dv = "TCT", fun.error = se)
##tct
lazy_plot(data.model, dv = "tct", fun.error = se)
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov")
data.pin.analysis.tct
plot(data.pin.analysis.tct$normality_test)
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov", transformation = log)
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov", transformation = "log")
library(dplyr)
##remove outlier
data.pin <- data.pin %>% filter(tct > 0)
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov", transformation = "log")
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("redirection", "size"))
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov", transformation = "log")
data.pin.analysis.tct
plot(data.pin.analysis.tct$normality_test)
data.pin.analysis.tct$post_hoc$`redirection:size`$interaction_plot
data.pin.analysis$post_hoc$`redirection:size`$`emmeans of redirection, size`
data.pin.analysis.tct$post_hoc$`redirection:size`$interaction_plot
data.pin.analysis.tct$post_hoc$`redirection:size
''
asd
;
`
data.pin.analysis.tct$post_hoc$`redirection:size`
print(data.pin.analysis.tct$post_hoc$`redirection:size`, type = "response")
summary(data.pin.analysis.tct$post_hoc$`redirection:size`)
summary(data.pin.analysis.tct$post_hoc$`redirection:size`$`emmeans of redirection, size`)
summary(data.pin.analysis.tct$post_hoc$`redirection:size`$`emmeans of redirection, size`, type = "response")
summary(data.pin.analysis.tct$post_hoc$`redirection:size`
s
data.pin.analysis.tct$post_hoc$`redirection:size`
data.pin.analysis.tct$post_hoc$`redirection:size`$interaction_plot
data.pin.analysis.tct$post_hoc$`redirection:size`$`pairwise differences of redirection, size`
print(data.pin.analysis.tct$post_hoc$`redirection:size`$`pairwise differences of redirection, size`, type = "response")
getwd()
devtools::load_all()
library(dplyr)
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw.pin <- lazy_load(pattern = "StudyDataCSV/{*}/summaryPIN_{pid}_{condition}.csv", read = readr::read_csv2)
setwd(path.cur)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`
)
##remove outlier
data.pin <- data.pin %>% filter(tct > 0)
##tct
lazy_plot(data.model, dv = "tct", fun.error = se)
##remove outlier
data.pin <- data.pin %>% filter(tct > 0)
data.model <- lazy_model(data.pin, participant = "pid", within.vars = c("redirection", "size"))
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov", transformation = "log")
devtools::load_all()
data.pin.analysis.tct <- lazy_analyze(data.model, dv = "tct", analysis_type = "aov", transformation = "log")
data.pin.analysis.tct$post_hoc$`redirection:size`$interaction_plot
##tct
lazy_plot(data.model, dv = "tct", fun.error = se)
data.pin.analysis.tct
data.pin.analysis.tct$model
data.pin.analysis.tct$model$aov
summary(data.pin.analysis.tct$model)
s <- summary(data.pin.analysis.tct$model)
s$sphericity.tests
s$repeated
s$type
s$multivariate.tests
s$univariate.tests
s$pval.adjustments
data.pin.analysis.tct
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
x[["sphericity_test"]]
q <-x[["sphericity_test"]]
q <-x[["sphericity_test"]][["names"]]
q <-x[["sphericity_test"]]
q
q$
1
q$test
q[["test"]]
x[["sphericity_test"]] < 0.05
x[["sphericity_test"]][[1]]
length(x[["sphericity_test"]])
names(x[["sphericity_test"]])
names(x[["sphericity_test"]])[1]
devtools::load_all()
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
p.value
cat(p.value)
devtools::load_all()
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
data.pin.analysis.tct
data.pin.analysis.tct
data.pin.analysis.tct
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
summary(data.pin.analysis.tct$model)
s <-summary(data.pin.analysis.tct$model)
s$sphericity.tests
s$pval.adjustments
q <- s$pval.adjustments
q["redirection"]
q["redirection"]
View(q)
q["GG eps"]
q["redirection", "GG eps"]
summary(data.pin.analysis.tct$model)$pval.adjustments
summary(data.pin.analysis.tct$model)$pval.adjustments["redirection", "GG eps"]
devtools::load_all()
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
devtools::load_all()
data.pin.analysis.tct
data.pin.analysis.tct$normality_test
q <- data.pin.analysis.tct$normality_test
q
q <- data.pin.analysis.tct$sphericity_test
plot(q)
data.pin.analysis.tct
View(data.pin)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`,
across(Input, str_replace, '-2', 'x')
)
View(data.pin)
library(stringr)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`,
across(Input, str_replace, '-2', 'x')
)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`,
across(Input, \(x) str_replace(string=x,pattern = "-2", replacement = x))
)
View(data.raw.pin)
data.pin <- data.raw.pin %>% mutate(
condition = as.numeric(condition),
size = case_when(
condition < 5 ~ "small",
condition < 10 ~ "medium",
condition < 15 ~ "large"
),
redirection = case_when(
condition %% 5 == 0 ~ "none",
condition %% 5 == 1 ~ "linear",
condition %% 5 == 2 ~ "ease-in",
condition %% 5 == 3 ~ "ease-out",
condition %% 5 == 4 ~ "shift",
),
correct = PIN == Input,
tct = `End Time` - `Starting Time`,
across(Input, \(x) str_replace(string=x,pattern = "-2", replacement = x))
)
View(data.pin)
