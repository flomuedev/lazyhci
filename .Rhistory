library(readr)
library(readxl)
library(fs)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.participantmapping <- read_xlsx("gr_latin_square_participants.xlsx")
data.participantmapping <- data.participantmapping %>%
pivot_longer(cols = !Participant, names_to = c("type", "running_order"), names_sep = " ", values_to = "value") %>%
pivot_wider(names_from = "type", values_from = "value") %>%
mutate(Participant = as.character(Participant))
data.raw.state <- read_csv(dir_ls(glob = "*state.csv"), id="path")
data.state <- data.raw.state %>%
pivot_wider(names_from = State, values_from = Time) %>%
mutate(delta = end - start) %>%
separate(path, c("Participant", "Scene", NA, NA)) %>%
mutate(Participant = str_sub(Participant, 3)) %>%
mutate(Scene = paste("Room ", as.roman(Scene), sep=""))
data.complete <- inner_join(data.state, data.participantmapping, by=c("Participant", "Scene"))
data.raw.hints <- read_csv2(dir_ls(glob = "hints*.csv"), id="path", col_names = FALSE)
data.hints <- data.raw.hints %>%
pivot_wider(names_from = X1, values_from = X2) %>%
separate(path, c("Participant", "Scene", NA)) %>%
pivot_longer(cols = starts_with("hint"), names_to = "hint_type", values_to = "hint_count") %>%
group_by(Participant, Scene) %>%
summarise(hints=sum(hint_count=="True")) %>%
mutate(Participant = str_sub(Participant, 6)) %>%
mutate(Scene = paste("Room ", as.roman(Scene), sep=""))
data.complete <- inner_join(data.complete, data.hints, by=c("Participant", "Scene"))
data.complete <- data.complete %>%
mutate(viz_nr = if_else(Visualization == "multi ECG" | Visualization == "multi hearts", "multi",
if_else(Visualization == "single ECG" | Visualization == "single hearts", "single", NA_character_))) %>%
mutate(viz_type = if_else(Visualization == "multi hearts" | Visualization == "single hearts", "hearts",
if_else(Visualization == "single ECG" | Visualization == "multi ECG", "ecg", NA_character_)))
View(data.complete)
View(data.complete)
View(data.complete)
View(data.raw.hints)
library(tidyverse)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.participantmapping <- read_xlsx("chi_authors.xlsx")
View(data.participantmapping)
data.raw <- read_xlsx("chi_authors.xlsx")
View(data.participantmapping)
data.raw <- read_xlsx("chi_authors.xlsx")
View(data.raw)
data.raw <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2022 <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2021 <- read_xlsx("chi_authors.xlsx", sheet = "2021")
data.raw.2020 <- read_xlsx("chi_authors.xlsx", sheet = "2020")
data.raw.2019 <- read_xlsx("chi_authors.xlsx", sheet = "2019")
View(data.raw.2019)
View(data.raw.2019)
data.complete <- inner_join(data.raw.2022, data.raw.2021, by=c("Author"))
View(data.complete)
View(data.raw.2019)
data.complete <- outer_join(data.raw.2022, data.raw.2021, by=c("Author"))
data.complete <- merge(data.raw.2022, data.raw.2021, by=c("Author"))
data.complete <- merge(data.raw.2022, data.raw.2021, by=c("Author"), all = TRUE)
View(data.complete)
df_list <- list(data.raw.2022, data.raw.2021, data.raw.2020, data.raw.2019)
df_list %>% reduce(full_join, by='Author')
data.raw.2022 <- data.raw.2022 %>% rename(`Number of Publications` = pubs_2022)
data.raw.2022 <- data.raw.2022 %>% rename(pubs_2022 = `Number of Publications`)
View(data.raw.2022)
data.raw.2022 <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2021 <- read_xlsx("chi_authors.xlsx", sheet = "2021")
data.raw.2020 <- read_xlsx("chi_authors.xlsx", sheet = "2020")
data.raw.2019 <- read_xlsx("chi_authors.xlsx", sheet = "2019")
data.raw.2022 <- data.raw.2022 %>% rename(pubs_2022 = `Number of Publications`)
data.raw.2021 <- data.raw.2022 %>% rename(pubs_2021 = `Number of Publications`)
data.raw.2020 <- data.raw.2022 %>% rename(pubs_2020 = `Number of Publications`)
data.raw.2019 <- data.raw.2022 %>% rename(pubs_2019 = `Number of Publications`)
View(data.raw.2021)
data.raw.2022 <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2021 <- read_xlsx("chi_authors.xlsx", sheet = "2021")
data.raw.2020 <- read_xlsx("chi_authors.xlsx", sheet = "2020")
data.raw.2019 <- read_xlsx("chi_authors.xlsx", sheet = "2019")
data.raw.2022 <- data.raw.2022 %>% rename(pubs_2022 = `Number of Publications`)
data.raw.2021 <- data.raw.2021 %>% rename(pubs_2021 = `Number of Publications`)
data.raw.2020 <- data.raw.2020 %>% rename(pubs_2020 = `Number of Publications`)
data.raw.2019 <- data.raw.2019 %>% rename(pubs_2019 = `Number of Publications`)
df_list <- list(data.raw.2022, data.raw.2021, data.raw.2020, data.raw.2019)
df_list %>% reduce(full_join, by='Author')
library(tidyverse)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw.2022 <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2021 <- read_xlsx("chi_authors.xlsx", sheet = "2021")
data.raw.2020 <- read_xlsx("chi_authors.xlsx", sheet = "2020")
data.raw.2019 <- read_xlsx("chi_authors.xlsx", sheet = "2019")
data.raw.2022 <- data.raw.2022 %>% rename(pubs_2022 = `Number of Publications`)
data.raw.2021 <- data.raw.2021 %>% rename(pubs_2021 = `Number of Publications`)
data.raw.2020 <- data.raw.2020 %>% rename(pubs_2020 = `Number of Publications`)
data.raw.2019 <- data.raw.2019 %>% rename(pubs_2019 = `Number of Publications`)
df_list <- list(data.raw.2022, data.raw.2021, data.raw.2020, data.raw.2019)
data.complete <- df_list %>% reduce(full_join, by='Author')
View(data.complete)
library(tidyverse)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw.2022 <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2021 <- read_xlsx("chi_authors.xlsx", sheet = "2021")
data.raw.2020 <- read_xlsx("chi_authors.xlsx", sheet = "2020")
data.raw.2019 <- read_xlsx("chi_authors.xlsx", sheet = "2019")
data.raw.2022 <- data.raw.2022 %>% rename(pubs_2022 = `Number of Publications`)
data.raw.2021 <- data.raw.2021 %>% rename(pubs_2021 = `Number of Publications`)
data.raw.2020 <- data.raw.2020 %>% rename(pubs_2020 = `Number of Publications`)
data.raw.2019 <- data.raw.2019 %>% rename(pubs_2019 = `Number of Publications`)
df_list <- list(data.raw.2022, data.raw.2021, data.raw.2020, data.raw.2019)
data.complete <- df_list %>%
reduce(full_join, by='Author') %>%
mutate(sum = pubs_2022 + pubs_2021)
View(data.complete)
library(tidyverse)
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw.2022 <- read_xlsx("chi_authors.xlsx", sheet = "2022")
data.raw.2021 <- read_xlsx("chi_authors.xlsx", sheet = "2021")
data.raw.2020 <- read_xlsx("chi_authors.xlsx", sheet = "2020")
data.raw.2019 <- read_xlsx("chi_authors.xlsx", sheet = "2019")
data.raw.2022 <- data.raw.2022 %>% rename(pubs_2022 = `Number of Publications`)
data.raw.2021 <- data.raw.2021 %>% rename(pubs_2021 = `Number of Publications`)
data.raw.2020 <- data.raw.2020 %>% rename(pubs_2020 = `Number of Publications`)
data.raw.2019 <- data.raw.2019 %>% rename(pubs_2019 = `Number of Publications`)
df_list <- list(data.raw.2022, data.raw.2021, data.raw.2020, data.raw.2019)
data.complete <- df_list %>%
reduce(full_join, by='Author') %>%
mutate(sum = pubs_2022 + pubs_2021 + pubs_2020 + pubs_2019)
View(data.complete)
library(tidyverse)
library(lazyhci)
library(readxl)
library(FSA)
library(rstatix)
library(ggstatsplot)
library(afex)
library(janitor)
library(viridis)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- readxl::read_excel("data.xlsx", sheet = "results - Table 1")
data.desc <- readxl::read_excel("data.xlsx", sheet = "results - Table 2")
data.raw$NR <- as.factor(data.raw$NR)
data.raw$WN <- as.factor(data.raw$WN)
#demographics
nr <- data.raw %>% count() %>% pull()
female <- data.raw %>% filter(PL == 1) %>% count() %>% pull()
male <- data.raw %>% filter(PL == 2) %>% count() %>% pull()
age <- data.raw %>% summarise(mean = mean(WI), sd = sd(WI), min = min(WI), max = max(WI))
participants <- data.raw %>% group_by(WN) %>% summarise(n = n(), mean = mean(WI), sd = sd(WI), min = min(WI), max = max(WI))
View(data.desc)
View(data.raw)
data.raw <- data.raw %>% filter(DZ > 1)
View(data.raw)
data.raw %>% group_by(WN) %>% summarise(n = n(), mean = mean(LM), sd = sd(LM), min = min(LM), max = max(LM))
data.raw %>% group_by(WN) %>% summarise(n = n(), mean = mean(LM), median = median(LM), sd = sd(LM), min = min(LM), max = max(LM))
money.fit <- aov_ez(id = "NR", dv = "LM",data = data.raw,between=c("WN"))
summary(money.fit)
money.fit.glm <- glm(LM ~ WN, data = data.raw, family ="poisson")
summary(money.fit.glm)
library(lazyhci)
library(tidyverse)
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
data.raw <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing")
data.pre <- data.raw %>% select(1:all_of(5))
data.post <- data.raw %>% select((ncol(data.raw) - all_of(14) + 1):ncol(data.raw))
questions_per_condition <- (ncol(data.raw) - 5 - 14) / 8
data.main <- NULL
for(condition in 1:nr_of_conditions) {
start <- 1 + (condition - 1) * questions_per_condition + pre_questions
end <- condition * questions_per_condition + pre_questions
data.main <- rbind(data.main, data.raw %>% select(all_of(participant_column), start:end) %>% janitor::clean_names())
}
for(condition in 1:8) {
start <- 1 + (condition - 1) * questions_per_condition + pre_questions
end <- condition * questions_per_condition + pre_questions
data.main <- rbind(data.main, data.raw %>% select(all_of(participant_column), start:end) %>% janitor::clean_names())
}
data.main <- NULL
for(condition in 1:8) {
start <- 1 + (condition - 1) * 14 + 5
end <- condition * questions_per_condition + 5
data.main <- rbind(data.main, data.raw %>% select(all_of(2), start:end) %>% janitor::clean_names())
}
for(condition in 1:8) {
start <- 1 + (condition - 1) * 14 + 5
end <- condition * questions_per_condition + 5
data.main <- data.raw %>% select(all_of(2), start:end)
#data.main <- rbind(data.main, data.raw %>% select(all_of(2), start:end) %>% janitor::clean_names())
}
View(data.main)
import_google_form <- function(url, pre_questions, post_questions, nr_of_conditions, participant_column) {
require(tidyverse)
require(googlesheets4)
require(janitor)
data.raw <- googlesheets4::read_sheet(url)
data.pre <- data.raw %>% select(1:all_of(pre_questions))
data.post <- data.raw %>% select((ncol(data.raw) - all_of(post_questions) + 1):ncol(data.raw))
questions_per_condition <- (ncol(data.raw) - pre_questions - post_questions) / nr_of_conditions
data.main <- NULL
for(condition in 1:nr_of_conditions) {
start <- 1 + (condition - 1) * questions_per_condition + pre_questions
end <- condition * questions_per_condition + pre_questions
data.tmp <- data.raw %>% select(all_of(participant_column), start:end) %>% janitor::clean_names()
if(!is.null(data.main)) {
names(data.tmp) <- names(data.main)
}
data.main <- rbind(data.main, data.tmp)
}
return(list("pre" = data.pre, "main" = data.main, "post" = data.post))
}
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
View(res)
res$main
t <- res$main
View(t)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
View(tlx_raw)
View(t)
View(tlx_raw)
tmp <- merge(t, tlx_raw, by = c("tlxID"))
t$tlxID <- t$please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9
tlx_raw$tlxID <- tlx_raw$id
tmp <- merge(t, tlx_raw, by = c("tlxID"))
View(tmp)
tmp <- merge(t, tlx_raw, by = c("tlxID"), all = TRUE)
View(tmp)
tmp <- merge(t, tlx_raw, by = c("tlxID"), all.x = TRUE)
View(tmp)
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
library(lazyhci)
library(tidyverse)
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
tlx_raw <- tlx_raw %>%
rename(tlxID = id)
main <- merge(res$main, tlx_raw, by = c("tlxID"), all.x = TRUE)
View(main)
devtools::document()
getwd()
View(main)
View(main)
View(res)
View(res)
View(res)
View(res)
res$pre
res$main
res$pre <- res$pre %>% filter(`Participant ID` > 0)
res$pre
import_google_form <- function(url, pre_questions, post_questions, nr_of_conditions, participant_column) {
require(tidyverse)
require(googlesheets4)
require(janitor)
data.raw <- googlesheets4::read_sheet(url) %>% janitor::clean_names()
data.pre <- data.raw %>% select(1:all_of(pre_questions))
data.post <- data.raw %>% select(all_of(participant_column), (ncol(data.raw) - all_of(post_questions) + 1):ncol(data.raw))
questions_per_condition <- (ncol(data.raw) - pre_questions - post_questions) / nr_of_conditions
data.main <- NULL
for(condition in 1:nr_of_conditions) {
start <- 1 + (condition - 1) * questions_per_condition + pre_questions
end <- condition * questions_per_condition + pre_questions
data.tmp <- data.raw %>% select(all_of(participant_column), start:end)
if(!is.null(data.main)) {
names(data.tmp) <- names(data.main)
}
data.main <- rbind(data.main, data.tmp)
}
return(list("pre" = data.pre, "main" = data.main, "post" = data.post))
}
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
View(res)
res$pre <- res$pre %>% filter(participant_id > 0)
res$main <- res$main %>% filter(participant_id > 0)
res$pos <- res$post %>% filter(participant_id > 0)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
tlx_raw <- tlx_raw %>%
rename(tlxID = id)
res$main <- merge(res$main, tlx_raw, by = c("tlxID"), all.x = TRUE)
devtools::document()
devtools::install()
library(lazyhci)
library(tidyverse)
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
res$main
names(res$main)
likert_plot_model(data=res$main, DV = "the_locomotion_technique_helped_me_complete_my_task_24", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id", grouping = c("visualization_8"))
plot(model.q1)
model.q1 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_helped_me_complete_my_task_24", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id", grouping = c("visualization_8"))
plot(model.q1)
model.q1 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_helped_me_complete_my_task_24", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id", grouping = c("position_support_6"))
plot(model.q1)
model.q2 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_was_convenient_to_use_25", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id", grouping = c("position_support_6"))
plot(model.q2)
model.q3 <- likert_plot_model(data=res$main, DV = "i_had_problems_orienting_myself_26", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id", grouping = c("position_support_6"))
plot(model.q3)
model.q2 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_was_convenient_to_use_25", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id", grouping = c("position_support_6"))
plot(model.q2)
model.q3 <- likert_plot_model(data=res$main, DV = "i_had_problems_orienting_myself_26", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q3)
model.q1 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_helped_me_complete_my_task_24", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q1)
model.q2 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_was_convenient_to_use_25", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q2)
library(lazyhci)
library(tidyverse)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dir_ls(glob = "*state.csv")
library(fs)
dir_ls(glob = "*state.csv")
dir_ls(glob = "*state.csv", recursive = TRUE)
dir_ls(glob = "*state.csv", recurse = TRUE)
data.raw.state <- read_csv(dir_ls(glob = "CoinLog*.csv", recursive = TRUE), id="path")
data.raw.state <- read_csv(dir_ls(glob = "CoinLog*.csv", recurse = TRUE), id="path")
View(data.raw.state)
glob = "CoinLog*.csv", recurse = TRUE
dir_ls(glob = "CoinLog*.csv", recurse = TRUE)
dir_ls(glob = "CoinLog_ID_1_2022-08-03_09-22-58_DISCRETE_NOUNDO.csv", recurse = TRUE)
dir_ls("raw", glob = "CoinLog_ID_1_2022-08-03_09-22-58_DISCRETE_NOUNDO.csv", recurse = TRUE)
dir_ls("raw", glob = "*.csv", recurse = TRUE)
dir_ls("raw", glob = "Coin*.csv", recurse = TRUE)
data.raw.state <- read_csv(dir_ls(glob = "CoinLog*"), id="path")
dir_ls("raw", glob = "Coin*", recurse = TRUE)
dir_ls("raw", glob = "*", recurse = TRUE)
dir_ls("raw", glob = "*csv", recurse = TRUE)
dir_ls("raw", glob = ".*", recurse = TRUE)
dir_ls("raw", glob = ".*csv", recurse = TRUE)
dir_ls("raw", glob = "Coin.*", recurse = TRUE)
dir_ls("raw", glob = "*", recurse = TRUE)
dir_ls("raw", glob = "*Coin*", recurse = TRUE)
data.raw.state <- read_csv(dir_ls(glob = "raw", glob = "*Coin*", recurse = TRUE), id="path")
data.raw.state <- read_csv(dir_ls("raw", glob = "*Coin*", recurse = TRUE), id="path")
data.raw.state <- read_csv(dir_ls("raw", glob = "*Coin*.csv", recurse = TRUE), id="path")
View(data.raw.state)
View(data.raw.state)
View(data.raw.state)
data.raw <- read_csv(dir_ls("raw", glob = "*Coin*.csv", recurse = TRUE), id="path")
View(data.raw)
View(data.raw)
data.raw$PosUndo <- if_else(data.raw$UndoType == "NOUNDO" || data.raw$UndoType == "ROTATION", "With Position Undo", "Without Position Undo")
data.raw$PosUndo <- if_else(data.raw$UndoType == "NOUNDO", "With Position Undo", "Without Position Undo")
View(data.raw)
data.raw$PosUndo <- if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "With Position Undo", "Without Position")
View(data.raw)
data.raw$PosUndo <- if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$RotUndo <- if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
View(data.raw)
View(data.raw)
View(data.raw)
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualizationType", "PosUndo", "RotUndo"))
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualisationType", "PosUndo", "RotUndo"))
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("PosUndo", "RotUndo"))
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualisationType", "PosUndo", "RotUndo"))
data_summary_plot(data=data.raw, DV = "RevisitngErrorPhase1", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitngErrorPhase1", IVs = c("VisualisationType", "UndoType"))
View(data.raw)
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase1", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitungErrorPhase2", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase1", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitungErrorPhase2", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase2", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase1", IVs = c("UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase2", IVs = c("UndoType"))
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualisationType", "UndoType"))
View(data.raw)
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase1", IVs = c("UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase1", IVs = c("VisualisationType", "UndoType"))
data_summary_plot(data=data.raw, DV = "RevisitingErrorPhase2", IVs = c("VisualisationType", "UndoType"))
library(lazyhci)
library(tidyverse)
### import
res <- import_google_form(url = "https://docs.google.com/spreadsheets/d/1HkDmigvlc5OxBVokN317d5IYVwMQgLo3ocsyGlS_S6E/edit?usp=sharing",
pre_questions = 5,
post_questions = 14,
nr_of_conditions = 8,
participant_column = 2)
res$pre <- res$pre %>% filter(participant_id > 0)
res$main <- res$main %>% filter(participant_id > 0)
res$pos <- res$post %>% filter(participant_id > 0)
tlx_raw <- read_csv("https://thomaskosch.com/tlx/nasa_tlx.txt", col_names = c("id", "mental_demand", "physical_demand", "temporal_demand", "performance", "effort", "frustration", "timestamp"))
res$main <- res$main %>%
rename(tlxID = please_have_the_participant_fill_out_the_tlx_questionnaire_on_https_thomaskosch_com_tlx_and_proivde_the_reported_id_here_9)
tlx_raw <- tlx_raw %>%
rename(tlxID = id)
res$main <- merge(res$main, tlx_raw, by = c("tlxID"), all.x = TRUE)
###
model.q1 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_helped_me_complete_my_task_24", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q1)
model.q2 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_was_convenient_to_use_25", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q2)
model.q3 <- likert_plot_model(data=res$main, DV = "i_had_problems_orienting_myself_26", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q3)
model.q1 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_helped_me_complete_my_task_24", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q1)
model.q2 <- likert_plot_model(data=res$main, DV = "the_locomotion_technique_was_convenient_to_use_25", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q2)
model.q3 <- likert_plot_model(data=res$main, DV = "i_had_problems_orienting_myself_26", IVs = c("position_support_6", "orientation_support_7", "visualization_8"), participantCol = "participant_id")
plot(model.q3)
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualisationType", "UndoType"))
library(lazyhci)
library(tidyverse)
library(fs)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- read_csv(dir_ls("raw", glob = "*Coin*.csv", recurse = TRUE), id="path")
data.raw$PosUndo <- if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$RotUndo <- if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
data_summary_plot(data=data.raw, DV = "CollectionDuration", IVs = c("VisualisationType", "UndoType"))
library(tidyverse)
library(lazyhci)
library(readxl)
library(FSA)
library(rstatix)
library(ggstatsplot)
library(afex)
library(janitor)
library(viridis)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- readxl::read_excel("data.xlsx", sheet = "results - Table 1")
data.desc <- readxl::read_excel("data.xlsx", sheet = "results - Table 2")
data.raw$NR <- as.factor(data.raw$NR)
data.raw$WN <- as.factor(data.raw$WN)
#demographics
nr <- data.raw %>% count() %>% pull()
female <- data.raw %>% filter(PL == 1) %>% count() %>% pull()
male <- data.raw %>% filter(PL == 2) %>% count() %>% pull()
age <- data.raw %>% summarise(mean = mean(WI), sd = sd(WI), min = min(WI), max = max(WI))
participants <- data.raw %>% group_by(WN) %>% summarise(n = n(), mean = mean(WI), sd = sd(WI), min = min(WI), max = max(WI))
data.raw <- data.raw %>% filter(DZ > 1)
View(data.desc)
library(tidyverse)
library(lazyhci)
library(readxl)
library(FSA)
library(rstatix)
library(ggstatsplot)
library(afex)
library(janitor)
library(viridis)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- readxl::read_excel("data.xlsx", sheet = "results - Table 1")
data.desc <- readxl::read_excel("data.xlsx", sheet = "results - Table 2")
data.raw$NR <- as.factor(data.raw$NR)
data.raw$WN <- as.factor(data.raw$WN)
#demographics
nr <- data.raw %>% count() %>% pull()
female <- data.raw %>% filter(PL == 1) %>% count() %>% pull()
male <- data.raw %>% filter(PL == 2) %>% count() %>% pull()
age <- data.raw %>% summarise(mean = mean(WI), sd = sd(WI), min = min(WI), max = max(WI))
participants <- data.raw %>% group_by(WN) %>% summarise(n = n(), mean = mean(WI), sd = sd(WI), min = min(WI), max = max(WI))
#data.raw <- data.raw %>% filter(DZ > 1)
#STS
outdir = file.path(getwd(), "plots")
plots.font.family <- "Linux Biolinum"
colorscale.likert <- c("#E76F51", "#EE8959", "#F4A261", "#E9C46A", "#2A9D8F", "#287271", "#264653")
colorscale.scale <- c("#584053", "#8DC6BD", "#FCBC66")
dir.create(outdir)
data.plot <- data.raw %>% rename('System Trust Scale (STS)' = trust, Condition = WN, '# of Coins' = LM)
data.plot$Condition <- recode_factor(data.plot$Condition, `1` = "simple movement", `2` = "random movement", `3` = "synchronized movement")
data.plot.fixed <- janitor::clean_names(data.plot)
likert.basesize = 18
likert.z2 <- likert_plot_model(data=data.plot, DV = "Z2", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z2.plot <- plot_likert(likert.model = likert.z2, title = "The system behaves in an underhanded manner.", colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize, ordered = TRUE)
likert.z2.plot
likert.basesize = 18
likert.z2 <- likert_plot_model(data=data.plot, DV = "Z2", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z2.plot <- plot_likert(likert.model = likert.z2, title = "The system behaves in an underhanded manner.", colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize, ordered = TRUE)
likert.z4 <- likert_plot_model(data=data.plot, DV = "Z4", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z4.plot <- plot_likert(likert.model = likert.z4, title = "I am wary of the system.", yblank = TRUE, colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize)
likert.z8 <- likert_plot_model(data=data.plot, DV = "Z8", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z8.plot <- plot_likert(likert.model = likert.z8, title = "The system has integrity.", yblank = TRUE, colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize)
likert.z9 <- likert_plot_model(data=data.plot, DV = "Z9", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z9.plot <- plot_likert(likert.model = likert.z9, title = "The system is dependable.", colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize)
likert.z11 <- likert_plot_model(data=data.plot, DV = "Z11", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z11.plot <- plot_likert(likert.model = likert.z11, title = "I can trust the system.", yblank = TRUE, colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize)
likert.z12 <- likert_plot_model(data=data.plot, DV = "Z12", IVs = c("Condition"), participantCol = "NR", survey_vector = "likert-7")
likert.z12.plot <- plot_likert(likert.model = likert.z12, title = "I am familar with the system.", yblank = TRUE, colorscale= colorscale.likert, theme.fontfamily = plots.font.family, p.basesize = likert.basesize)
likert.plot.combined <- grid_arrange_shared_legend(likert.z2.plot, likert.z4.plot, likert.z8.plot, likert.z9.plot, likert.z11.plot, likert.z12.plot, nrow= 2, ncol = 3)
ggsave(filename = file.path(outdir, "PAPER_likert.pdf"), plot = likert.plot.combined, width = 18, height = 6, device = cairo_pdf)
data.raw %>% group_by(WN) %>% summarise(cor_coef = cor.test(LM, trust, method = "pearson")$estimate,
p_val = cor.test(LM, trust, method = "pearson")$p.value)
