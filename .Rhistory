data_summary_plot(data=data.summarized, DV="distance_bigger", IVs = c("B"))
data.summarized <- data.merged %>%
group_by(a,b,c,d) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 10) / n()
)
data_summary_plot(data=data.summarized, DV="distance_bigger", IVs = c("b"))
data.summarized <- data.merged %>%
mutate(
technique = case_when(condition == "A" | condition == "B"  ~ "Standart Teleport",
condition == "C" | condition == "D"  ~ "Direction Visualization",
condition == "E" | condition == "F"  ~ "Target Visualization",
condition == "G" | condition == "H"  ~ "Full Preview",
condition == "I" | condition == "J"  ~ "Group Port"
)
)%>%
group_by(a,b,c,d) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 10) / n()
)
data.summarized <- data.merged %>%
mutate(
technique = case_when(b == "A" | b == "B"  ~ "Standart Teleport",
b == "C" | b == "D"  ~ "Direction Visualization",
b == "E" | b == "F"  ~ "Target Visualization",
b == "G" | b == "H"  ~ "Full Preview",
b == "I" | b == "J"  ~ "Group Port"
)
)%>%
group_by(a,b,c,d) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 10) / n()
)
View(data.summarized)
data.summarized <- data.merged %>%
mutate(
technique = case_when(b == "A" | b == "B"  ~ "Standart Teleport",
b == "C" | b == "D"  ~ "Direction Visualization",
b == "E" | b == "F"  ~ "Target Visualization",
b == "G" | b == "H"  ~ "Full Preview",
b == "I" | b == "J"  ~ "Group Port"
)
)%>%
group_by(a, technique) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 10) / n()
)
data.merged$leading =!xor((data.merged$a%%2!=0), (data.merged$b %in% c("A","C","E","G","I")))
data.merged$leading =!xor((data.merged$a %% 2!=0), (data.merged$b %in% c("A","C","E","G","I")))
View(data.merged)
data.merged$a
data.merged$leading =!xor((as.numeric(data.merged$a) %% 2 != 0), (data.merged$b %in% c("A","C","E","G","I")))
data.summarized <- data.merged %>%
mutate(
technique = case_when(b == "A" | b == "B"  ~ "Standart Teleport",
b == "C" | b == "D"  ~ "Direction Visualization",
b == "E" | b == "F"  ~ "Target Visualization",
b == "G" | b == "H"  ~ "Full Preview",
b == "I" | b == "J"  ~ "Group Port"
)
)%>%
group_by(a, technique, leading) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 10) / n()
)
data_summary_plot(data=data.summarized, DV="distance_bigger", IVs = c("technique", "leading"))
data.summarized <- data.merged %>%
mutate(
technique = case_when(b == "A" | b == "B"  ~ "Standart Teleport",
b == "C" | b == "D"  ~ "Direction Visualization",
b == "E" | b == "F"  ~ "Target Visualization",
b == "G" | b == "H"  ~ "Full Preview",
b == "I" | b == "J"  ~ "Group Port"
)
)%>%
group_by(a, technique, leading) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 16.5) / n()
)
data_summary_plot(data=data.summarized, DV="distance_bigger", IVs = c("technique", "leading"))
data.summarized <- data.merged %>%
mutate(
technique = case_when(b == "A" | b == "B"  ~ "Standart Teleport",
b == "C" | b == "D"  ~ "Direction Visualization",
b == "E" | b == "F"  ~ "Target Visualization",
b == "G" | b == "H"  ~ "Full Preview",
b == "I" | b == "J"  ~ "Group Port"
)
)%>%
group_by(a, technique, leading) %>%
slice(which.max(reason_for_log == 10):n()) %>%
summarise(
distance_bigger = sum(distance_head_xz > 16.5) / n(),
time_for_conditionn = max(local_time_lubridate) - min(local_time_lubridate)
)
data_summary_plot(data=data.summarized, DV="time_for_conditionn", IVs = c("technique", "leading"))
ano <- lazy_analyze(data=data.summarized, DV="time_for_conditionn", participant = "a", within.vars = c("technique", "leading"), analysis_type = "aov"
)
ano$model
ano$post_hoc$technique
ano$post_hoc$technique$`pairwise differences of technique`
ano$post_hoc$technique$`pairwise differences of technique`
ano$descriptives$technique
plot(ano$normality_test)
ano <- lazy_analyze(data=data.summarized, DV="time_for_conditionn", participant = "a", within.vars = c("technique", "leading"), analysis_type = "aov", transformation = "log")
plot(ano$normality_test)
ano <- lazy_analyze(data=data.summarized, DV="time_for_conditionn", participant = "a", within.vars = c("technique", "leading"), analysis_type = "art")
data.summarized$technique <- as.factor(data.summarized$technique)
ano <- lazy_analyze(data=data.summarized, DV="time_for_conditionn", participant = "a", within.vars = c("technique", "leading"), analysis_type = "art")
data.summarized$a <- as.factor(data.summarized$a)
data.summarized$leading <- as.factor(data.summarized$leading)
ano <- lazy_analyze(data=data.summarized, DV="time_for_conditionn", participant = "a", within.vars = c("technique", "leading"), analysis_type = "art")
ano$model
ano$post_hoc$technique
ano$post_hoc$technique$`pairwise differences of technique`
ano <- lazy_analyze(data=data.summarized, DV="distance_bigger", participant = "a", within.vars = c("technique", "leading"), analysis_type = "aov")
ano$normality_test
plot(ano$model)
plot(ano$normality_test)
ano <- lazy_analyze(data=data.summarized, DV="distance_bigger", participant = "a", within.vars = c("technique", "leading"), analysis_type = "aov", transformation = "log")
ano <- lazy_analyze(data=data.summarized, DV="distance_bigger", participant = "a", within.vars = c("technique", "leading"), analysis_type = "art")
ano$model$anova
ano$post_hoc$technique
ano$post_hoc$technique$`pairwise differences of technique`
ano$post_hoc$technique$`pairwise differences of technique`
View(dt.short.filtered)
data.raw.short.filtered <- data.raw.short %>% filter(reason_for_log %in% c(10, 5)) %>% group_by(a, b, c, d) %>% slice_head(n=1)
data.raw.short$local_time_lubridate <- hms(data.raw.short$local_time)
data.raw.complete$local_time_lubridate <- hms(data.raw.complete$local_time)
data.raw.short <- read_csv(dir_ls("data/edited logs", glob = "*LogFile-Basic*.csv", recurse = TRUE), id="path") %>% janitor::clean_names()
data.raw.short <- data.raw.short %>%
separate(path, c(NA, NA, NA, NA, NA, NA, NA, "a", "b", "c", "d", NA))
data.raw.short$local_time_lubridate <- hms(data.raw.short$local_time)
data.raw.short.filtered <- data.raw.short %>% filter(reason_for_log %in% c(10, 5)) %>% group_by(a, b, c, d) %>% slice_head(n=1)
View(data.raw.short.filtered)
data.raw.short.filtered <- data.raw.short %>% filter(reason_for_log %in% c(10)) %>% group_by(a, b, c, d) %>% slice_head(n=1)
View(data.raw.short.filtered)
data.raw.short.filtered <- data.raw.short %>% filter(reason_for_log %in% c(5, 10)) %>% group_by(a, b, c, d) %>% slice_head(n=1)
library(tidyverse)
library(lazyhci)
library(likert)
library(RColorBrewer)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
)
questions <- unique(data.raw$question)
group.order <- c(questions[2], questions[4], questions[1], questions[5], questions[6], questions[3])
plots.font.family <- "Linux Biolinum"
colorscale.likert <- c("#a71111", "#cc6621", "#f0d09d", "#ffffe0", "#b9d6c7", "#297878", "#003233")
basesize = 19
plot.model <- likert_plot_model(data=data.raw, DV = "rating", IVs = c("question"), participantCol = "participant")
plot.likert <- plot_likert(plot.model, colorscale = colorscale.likert, p.basesize = basesize, theme.fontfamily = plots.font.family, wrap = 55, group.order = group.order)
plot.likert <- plot.likert + guides(fill=guide_legend(nrow=2))
ggsave(filename = file.path(getwd(), "PAPER_likert.pdf"), plot = plot.likert, width = 17, height = 6, device = cairo_pdf)
questions
group.order <- c(questions[2], questions[4], questions[1], questions[5], questions[3], questions[6])
plots.font.family <- "Linux Biolinum"
colorscale.likert <- c("#a71111", "#cc6621", "#f0d09d", "#ffffe0", "#b9d6c7", "#297878", "#003233")
basesize = 19
plot.model <- likert_plot_model(data=data.raw, DV = "rating", IVs = c("question"), participantCol = "participant")
plot.likert <- plot_likert(plot.model, colorscale = colorscale.likert, p.basesize = basesize, theme.fontfamily = plots.font.family, wrap = 55, group.order = group.order)
plot.likert <- plot.likert + guides(fill=guide_legend(nrow=2))
ggsave(filename = file.path(getwd(), "PAPER_likert.pdf"), plot = plot.likert, width = 17, height = 6, device = cairo_pdf)
plot.model <- likert_plot_model(data=data.raw, DV = "rating", IVs = c("question"), participantCol = "participant")
plot.model
plot.model$items
View(data.raw)
plot.likert <- plot.likert + guides(fill=guide_legend(nrow=2))
plot.model$itemsplot.likert
plot.model <- likert_plot_model(data=data.raw, DV = "rating", IVs = c("question"), participantCol = "participant")
plot.likert <- plot_likert(plot.model, colorscale = colorscale.likert, p.basesize = basesize, theme.fontfamily = plots.font.family, wrap = 55, group.order = group.order)
plot.likert <- plot.likert + guides(fill=guide_legend(nrow=2))
plot.likert
plot.likert$labels$yintercept
View(plot.likert)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
relevel(
'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = 'Q1'
)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
relevel(
'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = 'Q1'
)
questions <- unique(data.raw$question)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
recode(
'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = 'Q1'
)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
recode(
Q1 = 'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.'
)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
recode(
question, Q1 = 'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.'
)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
recode(
question, 'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = Q1
)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
dplyr::recode(
question, 'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = Q1
)
View(data.raw)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
) %>%
dplyr::recode(
question, 'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = "Q1"
)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question, 'I judged the stiffness of the objects primarily based on my haptic sense rather than my visual sense.' = "Q1"
)
)
View(data.raw)
unique(data.raw$question)[1]
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question, unique(data.raw$question)[1] = "Q1"
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question, !!as.name(unique(data.raw$question)[1]) = "Q1"
unique(data.raw$question)[1]
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question, "I judged the stiffness of the objects primarily based on my  visual sense rather than my haptic sense." = "Q1"
)
)
View(data.raw)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question,
"I judged the stiffness of the objects primarily based on my  visual sense rather than my haptic sense." = "Q1",
"My visual sense had less impact on my judgement of the objects' stiffness than my haptic sense." = "Q2"
)
)
View(data.raw)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question,
"I judged the stiffness of the objects primarily based on my  visual sense rather than my haptic sense." = "Q1",
"My visual sense had less impact on my judgement of the objects' stiffness than my haptic sense." = "Q2",
"I judged the stiffness of the objects primarily baseb on my visual sense rather than my haptic sense." = "Q3",
"My haptic sense had less impact on my judgement of the objects' stiffness than my visual sense." = "Q4",
"I judged the stiffness of the objects based on my visual and haptic sense equally." = "Q5",
"I judged the stiffness of the objects based solely on one sense." = "Q6"
)
)
View(data.raw)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question,
"I judged the stiffness of the objects primarily based on my  visual sense rather than my haptic sense." = "Q1",
"My visual sense had less impact on my judgement of the objects' stiffness than my haptic sense." = "Q2",
"I judged the stiffness of the objects primarily based on my visual sense rather than my haptic sense." = "Q3",
"My haptic sense had less impact on my judgement of the objects' stiffness than my visual sense." = "Q4",
"I judged the stiffness of the objects based on my visual and haptic sense equally." = "Q5",
"I judged the stiffness of the objects based solely on one sense." = "Q6"
)
)
View(data.raw)
unique(data.raw$question2)
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question,
"I judged the stiffness of the objects primarily based on my  visual sense rather than my haptic sense." = "Q1",
"My visual sense had less impact on my judgement of the objects' stiffness than my haptic sense." = "Q2",
"I judged the stiffness of the objects primarily based on my  haptic sense rather than my visual sense." = "Q3",
"My haptic sense had less impact on my judgement of the objects' stiffness than my visual sense." = "Q4",
"I judged the stiffness of the objects based on my visual and haptic sense equally." = "Q5",
"I judged the stiffness of the objects based solely on one sense." = "Q6"
)
)
View(data.raw)
data.raw$question3 <- paste(data.raw$question2, ": ", data.raw$question, sep="")
data.raw <- read_csv("Stiffness+Perception+in+MR+2_September+12,+2022_11.12.csv", col_names = TRUE, skip = 1) %>%
slice_tail(n = 12) %>%
select(55:60) %>%
mutate(participant=row_number()) %>%
pivot_longer(1:6, names_to = "question", values_to = "rating") %>%
mutate(
question = substring(question, 199),
question2 = dplyr::recode(
question,
"I judged the stiffness of the objects primarily based on my  haptic sense rather than my visual sense." = "Q1",
"My visual sense had less impact on my judgement of the objects' stiffness than my haptic sense." = "Q2",
"I judged the stiffness of the objects primarily based on my  visual sense rather than my haptic sense." = "Q3",
"My haptic sense had less impact on my judgement of the objects' stiffness than my visual sense." = "Q4",
"I judged the stiffness of the objects based on my visual and haptic sense equally." = "Q5",
"I judged the stiffness of the objects based solely on one sense." = "Q6"
)
)
data.raw$question3 <- paste(data.raw$question2, ": ", data.raw$question, sep="")
data.raw$question <- paste(data.raw$question2, ": ", data.raw$question, sep="")
questions <- unique(data.raw$question)
group.order <- c(questions[2], questions[4], questions[1], questions[5], questions[3], questions[6])
plots.font.family <- "Linux Biolinum"
colorscale.likert <- c("#a71111", "#cc6621", "#f0d09d", "#ffffe0", "#b9d6c7", "#297878", "#003233")
basesize = 19
plot.model <- likert_plot_model(data=data.raw, DV = "rating", IVs = c("question"), participantCol = "participant")
plot.likert <- plot_likert(plot.model, colorscale = colorscale.likert, p.basesize = basesize, theme.fontfamily = plots.font.family, wrap = 55, group.order = group.order)
plot.likert <- plot.likert + guides(fill=guide_legend(nrow=2))
ggsave(filename = file.path(getwd(), "PAPER_likert.pdf"), plot = plot.likert, width = 17, height = 6, device = cairo_pdf)
library(tidyverse)
library(googlesheets4)
data.raw <- read_sheet('https://docs.google.com/spreadsheets/d/1b8LTt5vK_LdbcT2B3GVuPo61qBg4Uy5dNhjDLg2gSwc/edit?usp=sharing')
googlesheets4::gs4_deauth()
library(tidyverse)
library(googlesheets4)
data.raw <- read_sheet('https://docs.google.com/spreadsheets/d/1b8LTt5vK_LdbcT2B3GVuPo61qBg4Uy5dNhjDLg2gSwc/edit?usp=sharing')
View(data.raw)
data.raw <- read_sheet('https://docs.google.com/spreadsheets/d/1b8LTt5vK_LdbcT2B3GVuPo61qBg4Uy5dNhjDLg2gSwc/edit?usp=sharing'
, col_names = c("participant", "in_motion", "interaction_technique", "first_trial", "x", "y", "tct", "errors"))
View(data.raw)
data.raw$participant <- as.factor(data.raw$participant)
data.raw$in_motion <- as.factor(data.raw$in_motion)
data.raw$participant <- as.factor(data.raw$participant)
data.raw$in_motion <- as.factor(data.raw$in_motion)
data.raw$interaction_technique <- as.factor(data.raw$interaction_technique)
data.raw$x <- as.factor(data.raw$x)
data.raw$y <- as.factor(data.raw$y)
View(data.raw)
library(lazyhci)
plot.tct <- data_summary_plot(data.raw, "tct", IVs = c("in_motion", "interaction_technique"))
plot.tct
plot.tct <- data_summary_plot(data.raw, "tct", IVs = c("in_motion", "interaction_technique"), fun.error = "se")
plot.tct <- data_summary_plot(data.raw, "tct", IVs = c("in_motion", "interaction_technique"), fun.error = se)
plot.tct
library(afex)
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = ("in_motion", "interaction_technique"))
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique"))
summary(data.analysis)
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique", "x", "y"))
summary(data.analysis)
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique"), transformation = log)
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique"), transformation = "log")
summary(data.analysis)
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique"))
check_sphericity(data.analysis)
library(performance)
check_sphericity(data.analysis)
check_normality(data.analysis)
data.analysis.normality <- check_normality(data.analysis)
data.analysis.normality
plot(data.analysis.normality)
data.analysis.log <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique"), transformation = "log")
data.analysis.log.normality <- check_normality(data.analysis.log)
plot(data.analysis.log.normality)
data.analysis.log.normality
summary(data.analysis.log)
check_sphericity(data.analysis.log)
check_sphericity(data.analysis.log)
library(tidyverse)
library(googlesheets4)
library(lazyhci)
library(afex)
library(performance)
library(emmeans)
data.raw <- read_sheet('https://docs.google.com/spreadsheets/d/1b8LTt5vK_LdbcT2B3GVuPo61qBg4Uy5dNhjDLg2gSwc/edit?usp=sharing'
, col_names = c("participant", "in_motion", "interaction_technique", "first_trial", "x", "y", "tct", "errors"))
googlesheets4::gs4_deauth()
library(tidyverse)
library(googlesheets4)
library(lazyhci)
library(afex)
library(performance)
library(emmeans)
data.raw <- read_sheet('https://docs.google.com/spreadsheets/d/1b8LTt5vK_LdbcT2B3GVuPo61qBg4Uy5dNhjDLg2gSwc/edit?usp=sharing'
, col_names = c("participant", "in_motion", "interaction_technique", "first_trial", "x", "y", "tct", "errors"))
data.raw$participant <- as.factor(data.raw$participant)
data.raw$in_motion <- as.factor(data.raw$in_motion)
data.raw$interaction_technique <- as.factor(data.raw$interaction_technique)
data.raw$x <- as.factor(data.raw$x)
data.raw$y <- as.factor(data.raw$y)
data_summary_plot(data.raw, "tct", IVs = c("in_motion", "interaction_technique"), fun.error = se)
data.analysis <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique", "x", "y"))
data.analysis.normality <- check_normality(data.analysis)
data.analysis.normality
plot(data.analysis.normality)
data.analysis.log <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique", "x", "y"), transformation = "log")
data.analysis.log.normality <- check_normality(data.analysis.log)
data.analysis.log.normality
plot(data.analysis.log.normality)
summary(data.analysis.log)
pairs(emmeans(data.analysis.log, ~ in_motion))
pairs(emmeans(data.analysis.log, ~ y))
View(data.raw)
pairs(emmeans(data.analysis.log, ~in_motion:interaction_technique))
emmip(data.analysis.log, interaction_technique ~ in_motion)
emmip(data.analysis.log, interaction_technique ~ y)
data.analysis.log <- aov_ez(id = "participant", dv = "tct", data = data.raw, within = c("in_motion", "interaction_technique", "x", "y"), transformation = "log")
data.analysis.log.normality <- check_normality(data.analysis.log)
data.analysis.log.normality
plot(data.analysis.log.normality)
summary(data.analysis.log)
pairs(emmeans(data.analysis.log, ~ y))
