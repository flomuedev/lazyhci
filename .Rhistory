data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme")
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme")
devtools::load_all()
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme")
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "binominal")
binomial()
glmer::binomial()
lme4::negative.binomial()
lme4::glmer(formula = revisiting_error_phase2 ~ (visualization*pos_undo*rot_undo) + (1|subject_id), data = data.model$data)
lme4::glmer(formula = revisiting_error_phase2 ~ (visualization*pos_undo*rot_undo) + (1|subject_id), data = data.model$data, family = binomial)
lme4::glmer(formula = revisiting_error_phase2 ~ (visualization*pos_undo*rot_undo) + (1|subject_id), data = data.model$data, family = poisson)
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "poisson")
data.analysis2
data.analysis2$anova
data.analysis2$anova
data.analysis$model$anova_table
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "poisson")
View(data.raw)
data("fhch2010") # load
fhch <- droplevels(fhch2010[ fhch2010$correct,])
afex::data("fhch2010") # load
data("fhch2010")
data("fhch2010", package = afex)
data("fhch2010", package = "afex")
str(fhch2010)
fhch <- droplevels(fhch2010[ fhch2010$correct,])
fhch
View(fhch)
fhch_long <- fhch %>%
pivot_longer(cols = c(rt, log_rt), names_to = "rt_type", values_to = "rt")
fhch_long <- fhch %>%
dplyr::pivot_longer(cols = c(rt, log_rt), names_to = "rt_type", values_to = "rt")
fhch_long <- fhch %>%
tidyr::pivot_longer(cols = c(rt, log_rt), names_to = "rt_type", values_to = "rt")
View(fhch_long)
m1s <- mixed(log_rt ~ task*stimulus*density*frequency +
(stimulus*density*frequency|id)+
(task|item), fhch,
control = lmerControl(optCtrl = list(maxfun = 1e6)))
m1s <- afex::mixed(log_rt ~ task*stimulus*density*frequency +
(stimulus*density*frequency|id)+
(task|item), fhch,
control = lmerControl(optCtrl = list(maxfun = 1e6)))
m1s <- afex::mixed(log_rt ~ task*stimulus*density*frequency +
(stimulus*density*frequency|id)+
(task|item), fhch,
control = lme4::lmerControl(optCtrl = list(maxfun = 1e6)))
m9s <- mixed(log_rt ~ task*stimulus*density*frequency +
(stimulus+frequency||id)+
(task|item), fhch,
control = lmerControl(optCtrl = list(maxfun = 1e6)), expand_re = TRUE)
m9s <- afex::mixed(log_rt ~ task*stimulus*density*frequency +
(stimulus+frequency||id)+
(task|item), fhch,
control = lme4::lmerControl(optCtrl = list(maxfun = 1e6)), expand_re = TRUE)
m9s
ARTool::art(log_rt ~ task*stimulus*density*frequency + (stimulus+frequency||id) + (task|item), data = fhch)
ARTool::art(log_rt ~ task*stimulus*density*frequency + (stimulus*density*frequency|id)+(task|item), data = fhch)
data.model
view(data.model$data)
q <- data.model$data
View(q)
art <- ARTool::art(teleport_number ~ visualization*pos_undo_rot_undo + Error(subject_id/visualization*pos_undo_rot_undo))
art <- ARTool::art(teleport_number ~ visualization*pos_undo_rot_undo + Error(subject_id/visualization*pos_undo_rot_undo), data = q)
art <- ARTool::art(teleport_number ~ visualization*pos_undo_rot_undo + Error(subject_id/visualization*pos_undo*rot_undo), data = q)
art <- ARTool::art(teleport_number ~ visualization*pos_undo*rot_undo + Error(subject_id/visualization*pos_undo*rot_undo), data = q)
View(art)
summary(art)
anova(art, response="aligned")
anova(art, response="art")
anova(art, response="art")
art
art$aligned.ranks
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load("raw/CoinLog_ID_{*}_{year}_{time}_{visualization}_{condition}.csv")
getwd()
devtools::use_package('dplyr')
devtools::use_package('dplyr')
help(devtools)
devtools::document()
devtools::build()
devtools::install()
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load("raw/CoinLog_ID_{*}_{year}_{time}_{visualization}_{condition}.csv")
setwd(path.cur)
data.raw$pos_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$rot_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
lazy_plot(data.model, dv = "CollectionTime", fun.error = se)
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", transformation = "log")
data.analysis
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
data.analysis
plot(data.analysis$normality_test)
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "binominal")
data.analysis$descriptives
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "binominal")
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "binomial")
devtools::install()
devtools::load_all()
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "binomial")
View(data.analysis)
View(data.raw)
View(data.model)
t <- data.model$data
View(t)
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "poisson")
data.analysis2
data.analysis2$anova
data.model
data.model$data$visualization
levels(data.model$data$visualization)
for(v in x$within.vars) {
cat("'", v, "' with ", length(levels(x$data[,v])),  " levels (", paste(levels(x$data[,v]), collapse=", "), ")\n", sep="")
}
for(v in data.model$within.vars) {
cat("'", v, "' with ", length(levels(x$data[,v])),  " levels (", paste(levels(x$data[,v]), collapse=", "), ")\n", sep="")
}
for(v in data.model$within.vars) {
cat("'", v, "' with ", length(levels(data.model$data[,v])),  " levels (", paste(levels(x$data[,v]), collapse=", "), ")\n", sep="")
}
for(v in data.model$within.vars) {
cat("'", v, "' with ", length(levels(data.model$data[,v])),  " levels (", paste(levels(data.model$data[,v]), collapse=", "), ")\n", sep="")
}
for(v in data.model$within.vars) {
cat("'", v, "' with ", length(levels(data.model$data[,v])),  " levels (", paste(levels(data.model$data[,v]), collapse=", "), ")\n", sep="")
}
data.model$data[,v]
levels(data.model$data[,v])
levels(data.model$data[,pos_undo])
levels(data.model$data[,'pos_undo'])
levels(data.model$data)
data.model$data
data.model$data[,undo_type]
data.model$data[,'undo_type']
data.model$data[,'pos_undo']
levels(data.model$data[,'pos_undo'])
data.model %>% pull('pos_undo')
data.model %>% dplyr::pull('pos_undo')
data.model$data %>% dplyr::pull('pos_undo')
data.model$data %>% dplyr::pull('pos_undo') %>% nlevels()
data.model$data %>% dplyr::pull('pos_undo') %>% levels()
devtools::load_all()
data.model
devtools::load_all()
data.model
data.model$participant
devtools::load_all()
data.model
View(data.model)
data.model$data %>% dplyr::pull('subject_id')
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
lazy_check_complete_design(data.model, dv = 'pos_undo')
lazy_model$data %>%
dplyr::group_by_at(c(lazy_model$within.vars, lazy_model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n(),
val = mean(!!as.name(dv))
)
data.model$data %>%
dplyr::group_by_at(c(data.model$within.vars, data.model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n(),
val = mean(!!as.name(dv)))
data.model$data %>%
dplyr::group_by_at(c(data.model$within.vars, data.model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n(),
val = mean(!!as.name("undo_pos")))
View(data.model)
data.model[["data"]]
data.model$data %>%
dplyr::group_by_at(c(data.model$within.vars, data.model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n(),
val = mean(!!as.name("pos_undo")))
data.model[["data"]]$pos_undo
View(data.model)
View(data.model)
data.model$data %>%
dplyr::group_by_at(c(data.model$within.vars, data.model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n()))
data.model$data %>%
dplyr::group_by_at(c(data.model$within.vars, data.model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n())
data.analysis
devtools::load_all()
lazy_check_complete_design2(data.model)
data.sum <- data.model$data %>%
dplyr::group_by_at(c(data.model$within.vars, data.model$participant), .drop=FALSE) %>%
dplyr::summarise(
n = dplyr::n()
)
data.sum
devtools::load_all()
lazy_check_complete_design2(data.model)
unique(lazy_check_complete_design2(data.model)$n)
devtools::load_all()
lazy_check_complete_design2(data.model)
devtools::load_all()
lazy_check_complete_design2(data.model)
devtools::load_all()
lazy_check_complete_design2(data.model)
tt <- tryCatch(tt <- tryCatch(x(5),error=function(e) e, warning=function(w) w)
,error=function(e) e, warning=function(w) w)
tt$message
tt <- tryCatch(tt <- tryCatch(lazy_check_complete_design2(data.model),error=function(e) e, warning=function(w) w)
,error=function(e) e, warning=function(w) w)
tt$message
tt$call
devtools::load_all()
tt <- tryCatch(tt <- tryCatch(lazy_check_complete_design2(data.model),error=function(e) e, warning=function(w) w)
,error=function(e) e, warning=function(w) w)
t
tt
tt$message
devtools::load_all()
data.model
lazy_check_complete_design2(data.model)
devtools::load_all()
data.model
t
tt
tt is warning
if(tt, "warning")
is(tt, "warning")
is(tt, "error")
tt$message
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
devtools::load_all()
data.model
data.analysis
data.analysis$post_hoc$`visualization:pos_undo`
data.analysis$post_hoc$`visualization:pos_undo`$interaction_plot
data.analysis$post_hoc$
data.analysis$post_hoc
data.analysis$post_hoc
devtools::load_all()
data.analysis$post_hoc
data.analysis$model
data.analysis$post_hoc
data.analysis$post_hoc$visualization
devtools::load_all()
data.analysis$post_hoc$visualization
devtools::load_all()
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load("raw/CoinLog_ID_{*}_{year}_{time}_{visualization}_{condition}.csv")
setwd(path.cur)
data.raw$pos_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$rot_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
data.analysis$post_hoc$visualization
data.analysis$post_hoc
data.analysis$post_hoc$rot_undo
devtools::document()
devtools::load_all()
data.analysis$post_hoc$rot_undo
devtools::load_all()
data.analysis$post_hoc$rot_undo
devtools::load_all()
data.analysis$post_hoc$rot_undo
data.analysis$post_hoc$rot_undo
devtools::load_all()
data.analysis$post_hoc$rot_undo
View(x)
data.analysis$post_hoc$rot_undo
devtools::load_all()
data.analysis$post_hoc$rot_undo
devtools::load_all()
data.analysis$post_hoc$rot_undo
data.analysis$post_hoc$rot_undo$`pairwise differences of rot_undo`
devtools::load_all()
data.analysis$post_hoc$rot_undo
data.analysis$post_hoc
data.analysis$post_hoc$visualization$`pairwise differences of visualization`
t <- data.analysis$post_hoc$visualization$`pairwise differences of visualization`
t
data.analysis$post_hoc$visualization$`pairwise differences of visualization`
View(t)
View(t)
devtools::load_all()
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
devtools::load_all()
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
data.analysis$model
emmeans::emmeans(data.analysis$model, list(as.formula(visualization)), adjust = posthoc.adj)
emmeans::emmeans(data.analysis$model, list(as.formula(visualization)), adjust = "bonferoni")
emmeans::emmeans(data.analysis$model, list(as.formula("visualization")), adjust = "bonferoni")
emmeans::emmeans(data.analysis$model, list(as.formula("pairwise ~ visualization")), adjust = "bonferoni")
r <- emmeans::emmeans(data.analysis$model, list(as.formula("pairwise ~ visualization")), adjust = "bonferoni")
r$`emmeans of visualization`
r$`pairwise differences of visualization`
View(t)
devtools::load_all()
data.analysis$post_hoc
data.analysis$post_hoc$visualization
devtools::load_all()
data.analysis$post_hoc$visualization
cols(data.analysis$post_hoc$visualization)
names(data.analysis$post_hoc$visualization)
stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " ")
rev(stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " "))[1]
rev(stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " "))
stringr::str_split1(names(data.analysis$post_hoc$visualization)[1], pattern = " ")
stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " ")
unlist(stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " "))
rev(unlist(stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " ")))
rev(unlist(stringr::str_split(names(data.analysis$post_hoc$visualization)[1], pattern = " ")))[1]
devtools::load_all()
data.analysis$post_hoc
data.analysis$post_hoc$visualization
data.analysis$post_hoc
devtools::load_all()
data.analysis$post_hoc$visualization
devtools::load_all()
data.analysis$post_hoc$visualization
data.analysis$post_hoc$pos_undo
data.analysis$post_hoc$`visualization:pos_undo`
rev(unlist(stringr::str_split(names(x)[1], pattern = " ")))[1]
data.analysis$post_hoc$`visualization:pos_undo`
rev(unlist(stringr::str_split(names(data.analysis$post_hoc$`visualization:pos_undo`)[1], pattern = " ")))[1]
stringr::str_split(names(data.analysis$post_hoc$`visualization:pos_undo`)
)
stringr::str_split(names(data.analysis$post_hoc$`visualization:pos_undo`), pattern = " ")
names(data.analysis$post_hoc$`visualization:pos_undo`)
data.analysis$post_hoc
t <- visualization:pos_undo
t <- "visualization:pos_undo"
grepl(":", t, fixed = TRUE)
devtools::load_all()
data.analysis$post_hoc
devtools::load_all()
data.analysis$post_hoc
devtools::load_all()
data.analysis$post_hoc
devtools::load_all()
data.analysis$post_hoc
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load("raw/CoinLog_ID_{*}_{year}_{time}_{visualization}_{condition}.csv")
setwd(path.cur)
data.raw$pos_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$rot_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
data.model
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
data.model
data.model$data
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
data.model
data.analysis2 <- lazy_analyze2(lazy_model = data.model, dv="RevisitingErrorPhase2", analysis_type = "glme", family = "poisson")
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
model
data.model
devtools::load_all()
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
data.model
devtools::load_all()
data.model
data.analysis
View(data.model)
View(data.model)
data.model[["data"]]
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "number_coins_collected", analysis_type = "art")
View(data.raw)
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
devtools::load_all()
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
devtools::load_all()
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
devtools::load_all()
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
devtools::load_all()
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
devtools::load_all()
data.analysis.art <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime", analysis_type = "art")
data.analysis.art
data.analysis.art
data.analysis.art$post_hoc
data.analysis.art$post_hoc$`visualization:pos_undo`$interaction_plot
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load("raw/CoinLog_ID_{*}_{year}_{time}_{visualization}_{condition}.csv")
setwd(path.cur)
data.raw$pos_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$rot_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
devtools::load_all()
path.cur <- getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data.raw <- lazy_load("raw/CoinLog_ID_{*}_{year}_{time}_{visualization}_{condition}.csv")
setwd(path.cur)
data.raw$pos_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "ROTATION", "Without Position Undo", "With Position Undo")
data.raw$rot_undo <- dplyr::if_else(data.raw$UndoType == "NOUNDO" | data.raw$UndoType == "POSITION", "Without Rotation Undo", "With Rotation Undo")
data.model <- lazy_model(data = data.raw, participant = "SubjectID", within.vars = c("visualization", "pos_undo", "rot_undo"))
lazy_plot(data.model, dv = "CollectionTime", fun.error = se)
data.analysis <- lazy_analyze2(lazy_model = data.model, dv = "CollectionTime")
devtools::load_all()
devtools::load_all()
foo(1)
foo(0)
monitor(foo(1))
monitor(foo(3))
devtools::load_all()
monitor(foo(3))
monitor(foo(3))
monitor(foo(3))
devtools::load_all()
monitor(foo(3))
return(x)
foo <- function(x) {
if (x == 1) {
warning('Warning')
} else if (x == 0) {
stop('Error')
}
return(x)
}
t <- monitor(foo(3))
t <- monitor(foo(3))
devtools::load_all()
t <- monitor(foo(3))
t$message
t <- monitor(foo(3))
t
t$call
t <- monitor(foo
)
t
